{"name":"auto-harvester","enabled":true,"description":"Auto-Harvester for Nexus. Use HARV for a list of commands!","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":4,"code":"harvester = {\n// Initializing Array's\n    BlockList: [],\n    doAdd: [],\n    harvestedRooms: [],\n\n//\tInitializing Variables\n    harvDone: false,\n    harvesting: false,\n    harvesterDate: '',\n    startHarv: false,\n    \n//Functions\n    //Clear Out Our Current Queue\n    undoAll: function() {\n        this.doAdd.splice(0, this.doAdd.length)\n    },\n    // Harvest Things! Queue Things in hidden Queue! The Magic.\n    Harvesting: function() {\n        if (this.harvestedRooms.includes(num)) {\n            if (this.harvesting == false)\n                this.undoAll();\n        }\n        if (this.harvesting == true && Environment.hasOwnProperty(env) && !this.harvestedRooms.includes(num)) {\n            for (let plant of Environment[env]) {\n                //Checking to see if the plant is not excluded.\n                if (harvester.BlockList.includes(plant)) {\n                    continue\n                }\n                // Add 'harvest <some plant>' to the harvest array\n                harvester.doAdd.push(\"harvest \" + plant)\n                harvester.harvestedRooms.push(num)\n            }\n            this.exQueue()\n        }\n    },\n    // Removing something from a list without destroying the whole list.\n    removeA: function(arr) {\n    var what, a = arguments, L = a.length, ax;\n    while (L > 1 && arr.length) {\n        what = a[--L];\n        while ((ax= arr.indexOf(what)) !== -1) {\n            arr.splice(ax, 1);\n        }\n      }\n    },\n    // Harvest the next thing in the queue and inrift what we get.\n    exQueue: function() {\n        if (bal == \"1\" && eq == \"1\" && this.harvesting == true && this.doAdd.length) {\n            this.harvDone = false\n            var harvestIt = this.doAdd.shift()\n            client.send_direct(harvestIt)\n            print(harvestIt)\n            }\n        else if (!this.doAdd.length) {\n            this.harvDone = true\n            display_notice('~~~~ Done Harvesting Here ~~~', 'white', 'green')\n        }\n    }\n};\n// Setting Variables\nharvesterDate = '',\nharvDone = false,\nharvesting = false,\nnum = '',\nenv = '',\n\n// Long Names to Short Names Table - Really need to go through and optimize this...it doesn't feel right....\n    herbLong = {\n\t\"pieces of prickly ash bark\": [\"ash\"],\n    \"some prickly ash bark\": [\"ash\"],\n\t\"prickly ash bark\": [\"ash\"],\n\t\"bayberry bark\": [\"bayberry\"],\n\t\"bellwort flowers\": [\"bellwort\"], \n    \"bellwort flower\": [\"bellwort\"],\n\t\"bloodroot leaves\": [\"bloodroot\"],\n\t\"bloodroot leaf\": [\"bloodroot\"],\n\t\"cohosh roots\": [\"cohosh\"],\n    \"cohosh root\": [\"cohosh\"],\n\t\"black cohosh\": [\"cohosh\"], \n\t\"echinacea roots\": [\"echinacea\"],\n    \"echinacea root\": [\"echinacea\"],\n\t\"slippery elms\": [\"elm\"],\n    \"slippery\": [\"elm\"],\n\t\"hawthorn berries\": [\"hawthorn\"], \n\t\"hawthorn berry\": [\"hawthorn\"],\n\t\"ginger roots\": [\"ginger\"],\n    \"ginger root\": [\"ginger\"],\n\t\"ginseng roots\": [\"ginseng\"],\n    \"ginseng root\": [\"ginseng\"],\n\t\"goldenseal roots\": [\"goldenseal\"],\n    \"goldenseal root\": [\"goldenseal\"],\n\t\"pieces of kelp\": [\"kelp\"],\n    \"piece of kelp\": [\"kelp\"],\n\t\"kola nuts\": [\"kola\"],\n    \"kola nut\": [\"kola\"],\n\t\"lobelia seeds\": [\"lobelia\"],\n    \"lobelia seed\": [\"lobelia\"],\n\t\"irid moss\": [\"moss\"],\n\t\"myrrh gum\": [\"myrrh\"],\n\t\"myrrh balls\": [\"myrrh\"],\n    \"myrrh ball\": [\"myrrh\"],\n\t\"prickly pear\": [\"pear\"],\n\t\"slippery elm\": [\"elm\"],\n\t\"sileris berries\": [\"sileris\"], \n\t\"sileris berry\": [\"sileris\"],\n\t\"lady's slipper roots\": [\"slipper\"],\n    \"lady's slipper root\": [\"slipper\"],\n\t\"skullcap flowers\": [\"skullcap\"],\n    \"skullcap flower\": [\"skullcap\"],\n\t\"valerian leaves\": [\"valerian\"],\n    \"valerian leaf\": [\"valerian\"],\n\t\"a valerian leaf\": [\"valerian\"],\n\t\"burdock roots\": [\"burdock\"],\n\t\"kuzu roots\": [\"kuzu\"],\n    \"kuzu root\": [\"kuzu\"],\n}\n\nAllHarvestables = [\n\t\"sulphur\",\n\t\"mercury\",\n\t\"salt\",\n\t\"ash\",\n\t\"bayberry\",\n\t\"bellwort\", \n\t\"bloodroot\",\n\t\"cohosh\", \n\t\"echinacea\",\n\t\"elm\",\n\t\"hawthorn\",\n\t\"ginger\",\n\t\"ginseng\", \n\t\"goldenseal\",\n\t\"kelp\",\n\t\"kola\", \n\t\"lobelia\",\n\t\"irid\",\n\t\"myrrh\",\n\t\"pear\",\n\t\"sileris\",\n\t\"slipper\",\n\t\"skullcap\",\n\t\"valerian\",\n\t\"grain\",\n\t\"fruit\",\n\t\"sugarcane\",\n\t\"lumic\",\n\t\"vegetable\",\n\t\"cacao\",\n\t\"seeds\",\n\t\"egg\",\n\t\"nuts\",\n\t\"dust\",\n\t\"olive\",\n\t\"burdock\",\n\t\"kuzu\",\n]\n\ndisplay_notice('~~~ Harvester Loaded ~~~', 'white', 'red')"},{"type":"function","name":"onGMCP","enabled":true,"id":10,"code":"//Environment and Roomnumber set from the GMCP\nif (args.gmcp_method == 'Room.Info') {\n    num = args.gmcp_args.num;\n    env = args.gmcp_args.environment;\n}\n\n//EQBAL Variables set from the GMCP\nif (args.gmcp_methos == 'Char.Vitals') {\n    eq = args.gmcp_args.eq\n    bal = args.gmcp_args.bal\n}\n\n// What herbs grow in what environment? This table is where we get that information.\nEnvironment = {\n    \"Forest\": [\"elm\", \"ginger\", \"ginseng\", \"lobelia\", \"myrrh\", \"echinacea\", \"burdock\"],\n    \"Garden\": [\"echinacea\", \"elm\", \"ginger\", \"ginseng\", \"lobelia\", \"myrrh\"],\n    \"Desert\": [\"pear\", \"weed\"],\n    \"Grasslands\": [\"goldenseal\", \"slipper\"],\n    \"Mountains\": [\"valerian\"],\n    \"Jungle\": [\"kuzu\", \"kola\", \"skullcap\"],\n    \"Natural underground\": [\"moss\", \"bloodroot\"],\n    \"Hills\": [\"bayberry\", \"hawthorn\"],\n    \"Swamp\": [\"ash\", \"cohosh\", \"bellwort\"],\n    \"Valley\": [\"sileris\"],\n    \"Freshwater\": [\"kelp\"],\n    \"River\": [\"kelp\"],\n    \"Water\": [\"kelp\"],\n    \"Ocean\": [\"kelp\"],\n}\n\nharvester.Harvesting()"},{"type":"group","name":"Triggers","enabled":true,"id":2,"items":[{"type":"trigger","name":"Harvested","enabled":true,"id":11,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You reach out and carefully harvest (\\d+|a|an) (.*)\\.$","actions":[{"action":"script","script":"let longname = args[2]\n\n//Go through the Longname to Shortname table and see what the Shortname of the herb is and inrift it.\nfor (let plant of herbLong[longname]) {\n    if (args[1] == \"a\" || args[1] == \"an\") {\n        send_direct(\"inr \" + plant)\n    }\n    else {\n        send_direct(\"inr \" +  args[1] + ' ' + plant)\n    }\n}"}]},{"type":"trigger","name":"Fully Harvested","enabled":true,"id":14,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"That plant has been fully harvested.","actions":[{"action":"script","script":"//This plants empty, move onto the next.\nharvester.exQueue()"}]},{"type":"trigger","name":"Already Harvested It.","enabled":true,"id":15,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You have already harvested from this plant recently.","actions":[{"action":"script","script":"//Oops, we already got that one, move on.\nharvester.exQueue()"}]},{"type":"trigger","name":"Balance for Harvest","enabled":true,"id":17,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You have recovered balance on all limbs.","actions":[{"action":"script","script":"//Hey, we got balance back, let's get the rest.\nif (harvester.harvesting == true) {\n    harvester.exQueue()\n}"}]},{"type":"trigger","name":"Current Month","enabled":true,"id":16,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Today is the (\\w+) of (.*), (.*) years after the fall of the Seleucarian Empire\\.","actions":[{"action":"script","script":"//Making sure the month hasn't changed.\nif (harvester.harvesterDate != args[2]) {\n    harvester.harvestedRooms.splice(0,harvester.harvestedRooms)\n    harvester.harvesterDate = args[2]\n}"}]},{"type":"trigger","name":"Month Changed","enabled":true,"id":19,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^It is now the (\\w+) of (\\w+), (\\w+) years after the fall of the Seleucarian Empire\\.$","actions":[{"action":"script","script":"//Oop, month changed.\nharvester.harvestedRooms.splice(0, harvester.harvestedRooms)\nharvester.harvesterDate = args[2]"}]}],"actions":[]},{"type":"group","name":"Aliases","enabled":true,"id":5,"items":[{"type":"alias","name":"Start Harvester","enabled":true,"id":6,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"function","fn":"onLoad"}],"text":"resetharv"},{"type":"alias","name":"Block a Plant","enabled":true,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (AllHarvestables.includes(args[1]) && !harvester.BlockList.includes(args[1]))  {\n    display_notice('Adding ' + args[1] + ' to block list', 'white', 'black')\n    harvester.BlockList.push(args[1])\n\tdisplay_notice('Current block list: ' + harvester.BlockList, 'white', 'black')\n}\nelse if (harvester.BlockList.includes(args[1])) {\n    display_notice(\"That is already on the block list.\", 'white')\n}\nelse {\n    display_notice(\"That's not on the list of harvestable items. Please let Sohmnus know if this is a problem.\", 'white')\n}"}],"text":"^hblock (.+)$"},{"type":"alias","name":"Unblock a Plant","enabled":true,"id":8,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (harvester.BlockList.includes(args[1]))  {\n    display_notice('Removing ' + args[1] + ' from block list', 'white')\n    harvester.removeA(harvester.BlockList, args[1])\n\tdisplay_notice('Current block list: ' + harvester.BlockList, 'white')\n}\nelse {\n    display_notice(args[1] + \" is not on the block list.\", 'white')\n}"}],"text":"^hublock (.+)$"},{"type":"alias","name":"Show Current Blocking List","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice('Current block list: ' + harvester.BlockList, 'white', 'black')"}],"text":"^hsblock$"},{"type":"alias","name":"Auto-Harvest Toggle","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"if (harvester.harvesting) {\n    harvester.harvesting = false\n    harvester.undoAll()\n    print(harvester.doAdd)\n    display_notice(\"~~~ Auto-Harvesting Disabled ~~~\", \"white\", \"red\")\n}\nelse if (!harvester.harvesting) {\n    harvester.harvesting = true\n    display_notice(\"~~~ Auto-Harvesting Enabled ~~~\", \"white\", \"green\")\n}"}],"text":"^aharv$"},{"type":"alias","name":"List of Commands","enabled":true,"id":20,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"ow_Write(\"#output_main\",\"<div class='mono'>harv --------------------------- Print this list</div>\");\now_Write(\"#output_main\",\"<div class='mono'>harvreset ---------------------- Reset the ENTIRE system back to default without logging out and back in</div>\");\now_Write(\"#output_main\",\"<div class='mono'>hblock [herb] ------------------ Add an herb to the block list to not harvest it</div>\");\now_Write(\"#output_main\",\"<div class='mono'>hublock [herb] ----------------- Unblock a blocked herb to return to harvesting it</div>\");\now_Write(\"#output_main\",\"<div class='mono'>hsblock ------------------------ Show the current block list.</div>\");\now_Write(\"#output_main\",\"<div class='mono'>aharv -------------------------- Toggle the auto-harvesting off and on</div>\");\now_Write(\"#output_main\",\"<div class='mono'></div>\");"}],"text":"harv"}],"actions":[]}]}